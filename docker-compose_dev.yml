services:
  app:
    build:
      context: .
      dockerfile: Dockerfile_dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - .env
    environment:
      NODE_ENV: development
      MONGODB_URI: ${MONGODB_URI}
      USERNAME: ${USERNAME}
      PASSWORD: ${PASSWORD}
      NEXT_PUBLIC_TORRENT_SERVICE_URL: http://torrent-service:3001
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
    depends_on:
      torrent-service:
        condition: service_healthy
      mongodb:
        condition: service_started
    networks:
      - app-network
    # Enable hot reload
    stdin_open: true
    tty: true

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
    environment:
      - MONGO_INITDB_DATABASE=rssfeed
    networks:
      - app-network

  torrent-service:
    build: 
      context: ./services/torrent-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    volumes:
      - ./src/types:/app/src/types
      - ./services/torrent-service:/app/services/torrent-service
      - /app/node_modules
    networks:
      - app-network

volumes:
  mongodb_data:

networks:
  app-network:
    driver: bridge
